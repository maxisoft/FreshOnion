name: Docker image publish

on:
  push:
    branches: [ main, dev, docker ]

env:
  DOTNET_CLI_TELEMETRY_OPTOUT: 1

jobs:
  docker-build-publish:
    runs-on: ubuntu-latest

    steps:
    - 
      uses: actions/checkout@v2
      with:
        submodules: 'recursive'

    - name: Setup .NET Core SDK
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: '6.0.x'

    - 
      name: Build Dockerfile
      timeout-minutes: 20
      run: |
            docker build -t FreshOnion:testing -f ./Docker/Dockerfile .
    - 
      name: Install and Run Dive
      timeout-minutes: 2
      run: |
            pushd /tmp
            wget --no-verbose https://github.com/wagoodman/dive/releases/download/v0.10.0/dive_0.10.0_linux_amd64.deb
            sudo apt install --quiet -y ./dive_0.10.0_linux_amd64.deb
            popd
            CI=true dive --ci-config "${{ github.workspace }}/.dive-ci" FreshOnion:testing
  
    # cross publish locally to reduce time taken
    - run: dotnet publish -c Release -o publish/linux/amd64 --runtime linux-musl-x64 --self-contained false
    - run: dotnet publish -c Release -o publish/linux/arm/v7 --runtime linux-musl-arm --self-contained false
    - run: dotnet publish -c Release -o publish/linux/arm64/v8 --runtime linux-musl-arm64 --self-contained false

    # https://github.com/docker/setup-qemu-action
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1
    # https://github.com/docker/setup-buildx-action
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Build dockerfile
      if: success() && github.ref != 'refs/heads/main'
      timeout-minutes: 360
      run: |
            set -x
            echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

            docker buildx build \
            --platform=linux/amd64,linux/arm/v7,linux/arm64/v8 \
            --output "type=image,push=true" \
            --build-arg maintainer=${{ github.repository_owner }} \
            --file ./Docker/Dockerfile . \
            --tag ghcr.io/${{ github.repository_owner }}/FreshOnion/FreshOnion-testing:latest

    - name: Build dockerfile
      if: success() && github.ref == 'refs/heads/main'
      timeout-minutes: 360
      run: |
            set -x
            echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
            docker buildx build \
            --platform=linux/amd64,linux/arm/v7,linux/arm64/v8 \
            --output "type=image,push=true" \
            --build-arg maintainer=${{ github.repository_owner }} \
            --file ./Docker/Dockerfile . \
            --tag ghcr.io/${{ github.repository_owner }}/FreshOnion/FreshOnion:latest
